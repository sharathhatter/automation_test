buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath "com.newrelic.agent.android:agent-gradle-plugin:5.4.1"
        classpath 'io.fabric.tools:gradle:1.21.2'
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://maven.fabric.io/public'
    }
}

repositories {
    mavenCentral()
    maven {
        url "http://dl.bintray.com/journeyapps/maven"
    }
}

repositories {
    jcenter()
    maven { url 'http://maven.localytics.com/public' }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'newrelic'
import com.android.build.OutputFile

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    signingConfigs {
        bigbasket {
            storeFile project.KEY_STORE_FILE != "NONE" ? file(project.KEY_STORE_FILE) : null
            storePassword project.STORE_PASSWD
            keyAlias project.KEY_ALIAS
            keyPassword project.KEY_PASSWD
        }
    }

    defaultConfig {
        applicationId "com.bigbasket.mobileapp"
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
        manifestPlaceholders = [crashlytics_id: "d2ddc47cb01fb54a209f0ff02a2aecfec7b4d827",
                                launcher_icon : "@mipmap/ic_launcher"]
        //Does not work on gradle build tool version 1.3.0 https://code.google.com/p/android/issues/detail?id=182016
        setProperty("archivesBaseName", "Bigbasket-" + versionName);
    }

    sourceSets {
        beta {
            java.srcDirs("src/beta/java", "src/debug/java")
            res.srcDirs("src/beta/res", "src/debug/res")
            manifest.srcFile('src/debug/AndroidManifest.xml')
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro', '../wibmoSDK/proguard-rules.pro'
            manifestPlaceholders = [crashlytics_id: "5c333c62dd3801a51b2d6c14ef6e11a868ba5277",
                                    launcher_icon : "@mipmap/ic_launcher"]
            signingConfig signingConfigs.bigbasket.storeFile != null ? signingConfigs.bigbasket : null
        }
        debug {
            multiDexEnabled true
            versionNameSuffix "-debug"
            manifestPlaceholders = [crashlytics_id: "d2ddc47cb01fb54a209f0ff02a2aecfec7b4d827",
                                    launcher_icon : "@mipmap/ic_launcher_debug"]
            signingConfig signingConfigs.bigbasket.storeFile != null ? signingConfigs.bigbasket : null
        }

        beta {
            initWith(buildTypes.debug)
            debuggable true
            multiDexEnabled false
            minifyEnabled true
            applicationIdSuffix ".beta"
            versionNameSuffix "-beta"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro', 'leak-canary-proguard-rules.pro',
                    '../wibmoSDK/proguard-rules.pro'
            manifestPlaceholders = [crashlytics_id: "d2ddc47cb01fb54a209f0ff02a2aecfec7b4d827",
                                    launcher_icon : "@mipmap/ic_launcher_beta"]
            signingConfig signingConfigs.bigbasket.storeFile != null ? signingConfigs.bigbasket : null
        }
    }
    productFlavors {
        // For faster startup when building MultiDex app on a lollypop device
        lollypop {
            minSdkVersion 22
        }
        // For other devices
        regular {
            minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    dexOptions {
        jumboMode true
        javaMaxHeapSize "2g"
    }

    lintOptions {
        abortOnError false
    }

    splits {
        density {
            enable project.ENABLE_SPLITS != null ? project.ENABLE_SPLITS.toBoolean() : false;
            exclude "ldpi", "tvdpi"
            compatibleScreens 'small', 'normal', 'large', 'xlarge'
        }
    }


}

ext.versionCodes = [mdpi   : calculateVersionCodeFromDpi(160, 0),
                    hdpi   : calculateVersionCodeFromDpi(240, 0),
                    xhdpi  : calculateVersionCodeFromDpi(320, 0),
                    xxhdpi : calculateVersionCodeFromDpi(480, 0),
                    xxxhdpi: calculateVersionCodeFromDpi(640, 0),
                    all    : calculateVersionCodeFromDpi(160, -1)]

android.applicationVariants.all { variant ->
    // assign different version code for each output
    variant.outputs.each { output ->
        def key = output.getFilter(OutputFile.DENSITY) == null ? "all" : output.getFilter(OutputFile.DENSITY)
        output.versionCodeOverride = project.ext.versionCodes.get(key)
    }
}

int calculateVersionCodeFromDpi(int dpi, int delta) {
    int minSdk = Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
    int versionCode = Integer.parseInt(project.VERSION_CODE) + delta
    return ("" + minSdk + (dpi / 10) + versionCode).toInteger()
}


dependencies {
    compile project(':wibmoSDK')
    compile project(':mobikwik-sdk')
    compile project(':payuSdkUi')
    compile files('libs/AF-Android-SDK-v3.3.0.jar')
    compile files('libs/PGSDK_v1.0.jar')
    compile files('libs/GoogleConversionTrackingSdk-2.2.4.jar')
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
    compile "com.squareup.picasso:picasso:${picassoLibVersion}"
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.android.support:design:${supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibVersion}"
    compile "com.squareup.okhttp3:okhttp:${okhttpLibVersion}"
    compile "com.squareup.retrofit2:retrofit:${retrofitLibVersion}"
    compile "com.squareup.retrofit2:converter-gson:${retrofitLibVersion}"
    compile "com.google.android.gms:play-services-ads:${playServicesLibVersion}"
    // Needed for AppsFlyer & is optional for MoEngage
    compile "com.google.android.gms:play-services-plus:${playServicesLibVersion}"
    compile "com.google.android.gms:play-services-gcm:${playServicesLibVersion}"
    compile "com.google.android.gms:play-services-location:${playServicesLibVersion}"
    compile "com.google.android.gms:play-services-analytics:${playServicesLibVersion}"
    debugCompile "com.android.support:multidex:${multidexLibVersion}"
    debugCompile "com.squareup.leakcanary:leakcanary-android:${leakCanaryLibVersion}"
    debugCompile "com.squareup.okhttp3:logging-interceptor:${okhttpLibVersion}"
    betaCompile "com.android.support:multidex:${multidexLibVersion}"
    betaCompile "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryLibVersion}"
    betaCompile "com.squareup.okhttp3:logging-interceptor:${okhttpLibVersion}"
    compile 'com.localytics.android:library:3.6.0'
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'
    compile 'com.newrelic.agent.android:android-agent:5.4.1'
    compile 'com.facebook.android:facebook-android-sdk:4.4.0'
    compile 'com.journeyapps:zxing-android-embedded:3.1.0@aar'
    compile 'com.google.zxing:core:3.2.0'
    compile 'com.moengage:moe-android-sdk:6.0.03'
}
