buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath "com.newrelic.agent.android:agent-gradle-plugin:5.+"
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}

repositories {
    mavenCentral()

    maven {
        url "http://dl.bintray.com/journeyapps/maven"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'newrelic'

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "com.bigbasket.mobileapp"
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
        manifestPlaceholders = [crashlytics_id: "d2ddc47cb01fb54a209f0ff02a2aecfec7b4d827"]
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [crashlytics_id: "5c333c62dd3801a51b2d6c14ef6e11a868ba5277"]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    splits {
        density {
            enable true
            exclude "ldpi", "tvdpi"
            compatibleScreens 'small', 'normal', 'large', 'xlarge'
        }
    }
 //Uncomment at the time of deployment

    productFlavors {
        flavourMdpi {
            versionCode calculateVersionCodeFromDpi(160)
        }

        flavourHdpi {
            versionCode calculateVersionCodeFromDpi(240)
        }

        flavourXHdpi {
            versionCode calculateVersionCodeFromDpi(320)
        }

        flavourXXHdpi {
            versionCode calculateVersionCodeFromDpi(480)
        }

        flavourXXXHdpi {
            versionCode calculateVersionCodeFromDpi(640)
        }
    }

}

int calculateVersionCodeFromDpi(int dpi) {
    int minSdk = Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
    int versionCode = Integer.parseInt(project.VERSION_CODE)
    return ("" + minSdk + (dpi / 10) + versionCode).toInteger()
}

dependencies {
    compile files('libs/localytics.jar')
    compile project(':androidImageSlider')
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.android.support:support-v4:22.1.1'
    compile 'com.android.support:appcompat-v7:22.1.1'
    compile 'com.android.support:recyclerview-v7:22.1.1'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.google.android.gms:play-services-ads:6.5.87'
    compile 'com.google.android.gms:play-services-plus:6.5.87'
    compile 'com.newrelic.agent.android:android-agent:5.+'
    compile 'com.facebook.android:facebook-android-sdk:4.2.0'
    provided 'com.squareup.okhttp:okhttp:2.3.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.2.3@aar') {
        transitive = true;
    }
    // Supports Android 4.0.3 and later (API level 15)
    compile 'com.journeyapps:zxing-android-embedded:2.0.1@aar'
    // Supports Android 2.1 and later (API level 7), but not optimal for later Android versions.
    // If you only plan on supporting Android 4.0.3 and up, you don't need to include this.
    compile 'com.journeyapps:zxing-android-legacy:2.0.1@aar'
    // Convenience library to launch the scanning and encoding Activities.
    // It automatically picks the best scanning library from the above two, depending on the
    // Android version and what is available.
    compile 'com.journeyapps:zxing-android-integration:2.0.1@aar'
    // Version 3.0.x of zxing core contains some code that is not compatible on Android 2.2 and earlier.
    // This mostly affects encoding, but you should test if you plan to support these versions.
    // Older versions e.g. 2.2 may also work if you need support for older Android versions.
    compile 'com.google.zxing:core:3.0.1'
    compile project(':wibmoSDK')
    compile files('libs/AF-Android-SDK-v2.3.1.17.jar')
    compile 'com.ogaclejapan.smarttablayout:library:1.1.3@aar'
    compile project(':moe-addon-ubox')
    compile 'com.moengage:moe-android-sdk:5.1.5'
    compile 'com.melnykov:floatingactionbutton:1.3.0'
    provided 'com.nineoldandroids:library:2.4.0'
}